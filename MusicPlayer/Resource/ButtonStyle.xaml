<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:app="clr-namespace:MusicPlayer" 
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./ColorPalette.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="BtnStyle"
           TargetType="RadioButton">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border x:Name="Indicator"
                                    Height="50"
                                    Width="5"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="{StaticResource PrimaryMid}"
                                    Visibility="Collapsed"
                                    CornerRadius="2" />
                        <ContentPresenter />

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource PrimaryDark}">
            
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryMid}" />
            </Trigger>
        </Style.Triggers>

    </Style>
    <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleBtnStyle" BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Content">
            <Setter.Value>
                <materialDesign:PackIcon 
                            Kind="Play"
                            Width="40"
                            Height="40" 
                            RenderTransformOrigin="0.75,1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Content" >
                    <Setter.Value>
                        <materialDesign:PackIcon  Kind="Pause"
                                                Width="40"
                                                Height="40" 
                                                RenderTransformOrigin="0.75,1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleBtnStyle2" BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" Value="{StaticResource SecondaryLight}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleBtnStyle3" BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Content">
            <Setter.Value>
                <materialDesign:PackIcon Kind="VolumeHigh" Width ="30" Height="30"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Content">
                    <Setter.Value>
                        <materialDesign:PackIcon Kind="VolumeMute" Width ="30" Height="30"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>